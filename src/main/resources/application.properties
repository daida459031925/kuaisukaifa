#全局配置文件一般放到resources里或者目录下的/config下
#项目只会默认调用application.properties文件其他文件不会调用
#修改spring boot中的tomcat端口号
server.port = 8088
#微信测试用80  
#server.port = 80
server.session.timeout=10
server.tomcat.uri-encoding=UTF-8

#对内置tomcat进行设置使得支持https
server.ssl.key-store=classpath:keystore.p12
#(此处密码为第一步中创建.p12文件时你输入的口令)
server.ssl.key-store-password=cmddaida
server.ssl.keyStoreType=PKCS12
server.ssl.keyAlias=tomcat

#修改进入DispatcherServlet的规则
#server.servlet-path= /
#找到对应文件下的内容    --不知道什么原因最开始建立项目的时候可以直接配置这个通过代码访问出下面对应的网页
#返回的前缀   目录对应src/main/webapp下
#spring.mvc.view.prefix= /
#返回的后缀
#spring.mvc.view.suffix= .jsp

#thymeleaf 官方推荐的是ftl模板  后缀是ftl    详情见自己的微博
#spring.thymeleaf.prefix= classpath:templates/
#spring.thymeleaf.suffix= .html
#在使用thymeleaf的时候重复修改页面会有缓存
#spring.thymeleaf.cache=false

#数据库配置参数
#spring.datasource.url=jdbc:mysql://127.0.0.1:9999/we?useUnicode=true&characterEncoding=utf-8
spring.datasource.url=jdbc:mysql://39.108.165.59:3306/daida?useUnicode=true&characterEncoding=utf-8
#公司剑姬无脸的电脑
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/daida?useUnicode=true&characterEncoding=utf-8
#spring.datasource.username=root
spring.datasource.username=root
#spring.datasource.password=gjy75uyg7uSvxovx
spring.datasource.password=MYSQL
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5

#SQL查询,用来验证从连接池取出的连接
spring.datasource.dbcp2.validation-query=SELECT 1
#指明连接是否被空闲连接回收器(如果有)进行检验，如果检测失败，则连接将被从池中去除
spring.datasource.dbcp2.test-while-idle=true
#在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位，一般比minEvictableIdleTimeMillis小
spring.datasource.dbcp2.time-between-eviction-runs-millis=300000
#在每次空闲连接回收器线程(如果有)运行时检查的连接数量，最好和maxActive一致
spring.datasource.dbcp2.num-tests-per-eviction-run=50
#连接池中连接，在时间段内一直空闲，被逐出连接池的时间(1000*60*60)，以毫秒为单位
spring.datasource.dbcp2.min-evictable-idle-time-millis=3600000


#pagehelper  分页配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql


#添加mybatis配置信息 指向自己配置资源的xml配置文件
# mybatis.config= classpath:mybatis-config.xml
mybatis.mapperLocations=classpath:mappers/*.xml
# domain object's package
#指向的是包 类似于以前的实体类
#mybatis.typeAliasesPackage=bean
# handler's package
# mybatis.typeHandlersPackage=
# check the mybatis configuration exists
# mybatis.check-config-location=
# mode of execution. Default is SIMPLE
# mybatis.executorType=







#server.port=80
## 数据源配置
#spring.datasource.url=jdbc:mysql://localhost:3306/ssb_test
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.username=root
#spring.datasource.password=root
##连接池配置
##spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
#
##mybatis
##entity扫描的包名
#mybatis.type-aliases-package=com.xiaolyuh.domain.model
##UserMapper.xml所在的位置
#mybatis.mapper-locations=classpath*:/mybaits/*UserMapper.xml
#
##pagehelper分页插件配置
#pagehelper.helperDialect=mysql
#pagehelper.reasonable=true
#pagehelper.supportMethodsArguments=true
#pagehelper.params=count=countSql
#


#mybatis.config-location=mybatis-config.xml配置文件的路径
#mybatis.type-handlers-package=扫描typeHandlers的包
#mybatis.check-config-location=检查配置文件是否存在
#mybatis.executor-type=设置执行模式（SIMPLE, REUSE, BATCH），默认为SIMPLE

########################################################
### Java Persistence Api自动进行建表
########################################################
# Specify the DBMS
#spring.jpa.database= MYSQL
## Show or not log for each sqlquery
#spring.jpa.show-sql= true
## Hibernate ddl auto (create,create-drop, update)
#spring.jpa.hibernate.ddl-auto= update
## Naming strategy
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
## stripped before adding them tothe entity manager)
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

#################################################################
###########################jpa的配置################################
#################################################################
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
## Specify the DBMS
#spring.jpa.database=MYSQL
## Show or not log for each sql query
#spring.jpa.show-sql=true
## Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto=update
## Naming strategy
#spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
## stripped before adding them to the entity manager)
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect




#在application.properties文件中引入日志配置文件
#=====================================  log  =============================
#不知道什么原因logback的xml又不生效了所以只使用系统配置
#logging.config=classpath:logback-boot.xml
#使用jar包打包时候不能将日志生成在jar包里所以要指定位置
#日志可以生成在当前jar包平级下
logging.file=./log/sys.log
#设置日志级别 生成日志log4j
#级别依次为【从高到低】：FATAL > ERROR > WARN > INFO > DEBUG > TRACE
logging.level.org.springframework=info

#tomcat日志生成位置  可以看出请求时间等
system.root.path=./tomcat_log/tomcat_sys.log
server.tomcat.basedir=${system.root.path}/log/tomcat_log
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s %S (%D ms)

##日志配置
#logging.level.com.xiaolyuh=debug
#logging.level.org.springframework.web=debug
#logging.level.org.springframework.transaction=debug
#logging.level.org.mybatis=debug
#
#debug=false




########################################################
###REDIS (RedisProperties) redis基本配置；
########################################################
# database name
spring.redis.database=0
# server host1 单机使用，对应服务器ip
spring.redis.host=127.0.0.1
# server password 密码，如果没有设置可不配
#spring.redis.password=
#connection port  单机使用，对应端口号
spring.redis.port=6379
# pool settings ...池配置
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-idle=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.min-idle=0
## 连接池中的最大空闲连接
spring.redis.pool.max-active=8
## 连接池中的最小空闲连接
spring.redis.pool.max-wait=-1
## 连接超时时间（设置缓存保留时间（seconds）这里设置的是秒）
spring.redis.timeout=600
# name of Redis server  哨兵监听的Redis server的名称
#spring.redis.sentinel.master=mymaster
# comma-separated list of host:port pairs  哨兵的配置列表
#spring.redis.sentinel.nodes=127.0.0.1:26379,127.0.0.1:26479,127.0.0.1:26579
#spring.session_and_redis这个是将session保存到redis中将集群或者分布式中session保存在redis中使用同一个session；和cas没关系cas是单点登陆。不过用session和redis也可以做到相同效果
spring.session.store-type=redis

# database name
#spring.redis.database=0
## server host1
#spring.redis.host=127.0.0.1
## server password
##spring.redis.password=
##connection port
#spring.redis.port=6379
## pool settings ...
#spring.redis.pool.max-idle=8
#spring.redis.pool.min-idle=0
#spring.redis.pool.max-active=8
#spring.redis.pool.max-wait=-1
## name of Redis server
##spring.redis.sentinel.master=
## comma-separated list of host:portpairs
##spring.redis.sentinel.nodes=


## REDIS (RedisProperties)
## Redis数据库索引（默认为0）
#spring.redis.database=0
## database name
#spring.redis.host=localhost
## server host
#spring.redis.password=
## server password
#spring.redis.port=6379
## connection port
## 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8
## pool settings ...
## 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
## 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
#spring.redis.sentinel.master= # name of Redis server
#spring.redis.sentinel.nodes= # comma-separated list of host:port pairs


########################################################
###tk.mybatis  基本配置；
########################################################

#mapper.mappers=BasicDao.BasicDAO
#mapper.notEmpty=true
#mapper.IDENTITY=MYSQL

debug=true

#热部署配置
spring.thymeleaf.cache=false
spring.thymeleaf.cache-period=0
spring.template.cache=false