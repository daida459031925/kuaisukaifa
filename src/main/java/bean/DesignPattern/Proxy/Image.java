package bean.DesignPattern.Proxy;

/**
 * 代理模式，主要是将很多的代码进行复用。
 *
 * 在创建某个对象的时候 需要进行一系列的操作的时候。
 * 例如读取io中的文件时候。这个可以直接写成一个公共的调用方法
 * 这也是最常见的方式。
 * 但是代理模式解决了此类问题。
 * 将初始化时候使用代理模式进行控制封装。然后返回的也是同一个对象。
 * 里面使用到了单利模式
 *
 * 这样子使用代理模式可能也会遇上  不停创建新的对象。在创建同一个对象的时候   这样会减少资源的浪费
 * 而在创建不同对象的时候   就会出现   不停创建和销毁。
 * 不知道是不是这个例子   。不满足这些。。。。。。。还是说本来就是这样
 */
public interface Image {
    public void Display();
}
